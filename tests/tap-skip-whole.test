#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Basic TAP test protocol support:
#  - special plan format to skip all the tests in a script

parallel_tests=yes
. ./defs || Exit 1

. "$testsrcdir"/tap-setup.sh || fatal_ "sourcing tap-setup.sh"

weirdchars=\''"$!&()[]<>#;^?*/@%=,.:'

cat > foo.test <<END
1..0
not ok 1
not ok 2
END

cat > bar.test <<END
1..0$tab $tab
ok 1
Bail out! some random failure
END

# It is undefined whether the comment after the plan below should
# count as an explanation; still, the test should be skipped.
cat > baz.test <<END
1..0 # WWW::Mechanize not installed
ok 1
END

cat > wget.test <<END
1..0 # SKIP wget(1) not installed
not ok 1 # TODO
ok 2
ok 3 # SKIP
END

cat > curl.test <<END
1..0 # skip: Can't connect to gnu.org!
not ok 1
ok 2 # TODO
END

cat > mu.test <<END
1..0 # Skip $weirdchars
# Various TAP errors in here shouldn't be seen, as the test is skipped.
1..2
ok 1
ok 22
not ok 333
1..7
END

env TESTS='foo.test bar.test baz.test wget.test curl.test mu.test' \
  $MAKE -e check >stdout || { cat stdout; Exit 1; }
cat stdout

count_test_results total=6 pass=0 fail=0 xpass=0 xfail=0 skip=6 error=0

grep '^SKIP: foo\.test$' stdout
grep '^SKIP: bar\.test$' stdout
grep '^SKIP: baz\.test' stdout # Deliberately laxer, see above for why.
grep '^SKIP: wget\.test .* wget(1) not installed$' stdout
grep '^SKIP: curl\.test .* Can'\''t connect to gnu\.org!$' stdout
grep '^SKIP: mu\.test' stdout | $FGREP "$weirdchars" stdout
test `grep -c ': .*\.test' stdout` -eq 6

:
