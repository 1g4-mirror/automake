#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#
# Test driver for a very simple test protocol used by the Automake
# testsuite to check support for custom test drivers allowing for more
# test results per test script.
#
# The exit status of the wrapped script is ignored.  Lines in its stdout
# and stderr beginning with `PASS', `FAIL', `XFAIL', `XPASS', `SKIP' or
# `ERROR' count as a test case result with the obviously-corresponding
# outcome.  Every other line is ignored for what concerns the testsuite
# outcome.
#
# This script is used at least by the `driver-custom-multitest*.test'
# tests.
#

# Help to avoid typo-related bugs.
set -u

## Option parsing.

test_name=INVALID.NAME
log_file=BAD.LOG
while test $# -gt 0; do
  case $1 in
    --test-name) test_name=$2; shift;;
    --log-file) log_file=$2; shift;;
    # Ignored.
    --expect-failure) shift;;
    --color-tests) shift;;
    --enable-hard-errors) shift;;
    # Explicitly terminate option list.
    --) shift; break;;
    # Shouldn't happen
    *) echo "$0: invalid option/argument: '$1'" >&2; exit 2;;
  esac
  shift
done

## Run the test script, get test cases results, display them on console.

tmp_out=$log_file-out.tmp
tmp_res=$log_file-res.tmp

"$@" 2>&1 | tee $tmp_out | (
  i=0 st=0
  : > $tmp_res
  while read line; do
    case $line in
      PASS:*|FAIL:*|XPASS:*|XFAIL:*|SKIP:*|ERROR:*)
        i=`expr $i + 1`
        result=`LC_ALL=C expr "$line" : '\([A-Z]*\):.*'`
        case $result in FAIL|XPASS|ERROR) st=1;; esac
        # Output testcase result to console.
        echo "$result: $test_name, testcase $i"
        # Register testcase outcome for the log file.
        echo ":test-result: $line" >> $tmp_res
        echo >> $tmp_res
        ;;
    esac
  done
  exit $st
)

if test $? -eq 0; then
  global_result=PASS
else
  global_result=FAIL
fi

## Write the log file.

{
  echo "$global_result: $test_name"
  echo "$global_result: $test_name" | sed 's/./=/g'
  echo
  cat $tmp_res
  echo
  echo --------------------
  echo
  cat $tmp_out
} > $log_file
rm -f $tmp_out $tmp_res

## And we're done.

exit 0
