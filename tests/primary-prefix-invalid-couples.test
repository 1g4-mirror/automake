#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Not all primaries/directories combinations are valid.
# Automake should flag them as errors.
# Originated from PR/294, extended later (following bug #7647) to
# cover more cases.
# See also test `primary-prefix-valid-couples.test'.

. ./defs || Exit 1

set -e

oIFS=$IFS # Saved for later.

cat >> configure.in <<'END'
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_LIBTOOL
AM_PROG_GCJ
AM_PATH_PYTHON
AM_PATH_LISPDIR
END

$ACLOCAL

# Please keep this list in sync with the list of "Directory Variables"
# in the GNU Coding Standards and with the list additional directory
# variables provided by autoconf and/or automake (pkgdatadir, pkglibdir,
# ...).   See also the hash `%standard_prefix' in the automake script.
prefixes='bin data dataroot doc dvi exec html include info lib libexec
          lisp locale localstate man man1 man2 man3 man4 man5 man6 man7
          man8 man9 oldinclude pdf pkgdata pkginclude pkglib pkglibexec
          ps sbin sharedstate sysconf'
# Please keep this list in sync with the list of primaries documented in
# the Automake manual (see the "The Uniform Naming Scheme" section).
primaries='PROGRAMS LIBRARIES LTLIBRARIES LISP PYTHON JAVA SCRIPTS DATA
           HEADERS MANS TEXINFOS'

# Use files, not variables, to hold the list of all the possible
# prefix_PRIMARY couples and the list of those couples valid for
# automake, to avoid having unreadable very verbose traces.

set +x # Don't be overly verbose.

for prefix in $prefixes; do
  for primary in $primaries; do
    echo ${prefix}_${primary}
  done
done >all.list

for primary in $primaries; do
  prefixes_ok=''
  case $primary in
    LIBRARIES|LTLIBRARIES)
      prefixes_ok='lib pkglib'
      ;;
    PROGRAMS)
      prefixes_ok='bin sbin libexec pkglibexec'
      ;;
    SCRIPTS)
      prefixes_ok='bin sbin libexec pkgdata'
      ;;
    DATA)
      prefixes_ok='data dataroot pkgdata doc html dvi pdf ps
                   sysconf sharedstate localstate lisp'
      ;;
    HEADERS)
      prefixes_ok='include oldinclude pkginclude'
      ;;
    LISP)
      prefixes_ok='lisp'
      ;;
    PYTHON)
      prefixes_ok='python'
      ;;
    JAVA)
      prefixes_ok='java'
      ;;
    MANS)
      # FIXME: Here we'd like to have:
      #   prefixes_ok='man man1 man2 man3 man4 man5 man6 man7 man8 man9'
      # but Automake currently fails on that, as it allows the MANS
      # primary to be coupled to any prefix.
      # See also Automake bug#7656.
      # We should dig out how automake had come to behave this way, and
      # if such a behaviour can be safely changed.
      prefixes_ok=$prefixes
      ;;
    TEXINFOS)
      # FIXME: Here we'd like to have:
      #   prefixes_ok='info'
      # but Automake currently fails on that, as it allows the use of
      # `foo_TEXINFOS' to declare extra Texinfo sources for the `foo'
      # Texinfo manual, as in e.g.:
      #   info_TEXINFOS = foo.texi
      #   foo_TEXINFOS = gpl.texi
      # See also Automake bug#7657.
      prefixes_ok=$prefixes
      ;;
    *)
      fatal_ "unrecognized primary '$primary'"
      ;;
  esac
  for prefix in $prefixes_ok; do
    echo ${prefix}_${primary}
  done
done >allow.list

set -x # Restore shell xtraces from now on.

cat all.list
cat allow.list

while read x; do
  grep "^$x$" allow.list >/dev/null && continue
  # To get the expected error message more in detail.
  IFS=_; set $x; IFS=$oIFS
  test $# -eq 2 || fatal_ "internal error in 'all.list'" # Sanity check.
  prefix=$1
  primary=$2
  errmsg_rx=".*${prefix}dir.* not a legitimate directory .*$primary"
  # Now do the test for this prefix/primary combination.
  echo "$x = foo" > Makefile.am
  AUTOMAKE_fails -a || Exit 1
  grep "^Makefile\\.am:1:$errmsg_rx" stderr || Exit 1
done <all.list

:
