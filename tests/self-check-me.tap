#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Sanity check for the automake testsuite.
# Make sure that $me gets automatically defined by `./defs', and that it
# can be overridden by the test script.

am_create_testdir=no
. ./defs || Exit 1

plan_ 9

AM_TESTS_REEXEC=no; export AM_TESTS_REEXEC
set +e

do_check ()
{
  if $SHELL -c '. ./defs && echo me=$me' "$1" | grep "^me=$2$"; then
    r='ok'
  else
    r='not ok'
  fi
  result_ "$r" "me=$1"
  unset r
}

do_check foo-bar-.test 'foo-bar-'
do_check _foo__bar.test '_foo__bar'
do_check 012.test '012'
do_check foo.bar 'foo\.bar'
do_check a.b.c.test 'a\.b\.c'

# If we override $me, ./defs should not modify it.

if s=`$SHELL -c 'me=foo.test && . ./defs && echo me=$me' bad.test`; then
  r='ok'
else
  r='not ok'
fi
result_ "$r" "override of \$me before ./defs causes no error"

r='ok'
if printf '%s\n' "$s" | grep '^me=foo\.test$'; then :; else r='not ok'; fi
if printf '%s\n' "$s" | grep 'me=bad'; then r='not ok'; else :; fi
result_ "$r" "override of \$me before defs is honored"

# Overriding $me after sourcing ./defs-static should work.

if s=`$SHELL -c '. ./defs-static && me=zardoz &&
                 . ./defs && echo me=$me' bad.test`; then
  r='ok'
else
  r='not ok'
fi
result_ "$r" "override of \$me after defs-static causes no error"

r='ok'
if printf '%s\n' "$s" | grep '^me=zardoz$'; then :; else r='not ok'; fi
if printf '%s\n' "$s" | grep 'me=bad'; then r='not ok'; else :; fi
result_ "$r" "override of \$me after ./defs-static is honored"

:
