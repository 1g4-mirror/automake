#! /bin/sh
# Copyright (C) 2011 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Custom test drivers and parallel-tests harness: check the documented
# semantics for inhibiting the scanning of the remaining portion of a
# `.log' file (for what concerns metadata).  Currently, this is done
# with the use of the reStructuredText field `:end-metadata:'.

parallel_tests=yes
. ./defs || Exit 1

cat >> configure.in << 'END'
AC_OUTPUT
END

cat > Makefile.am << 'END'
TEST_LOG_DRIVER = ./passthrough-driver
TESTS = foo.test bar.test baz.test
END

cat > passthrough-driver <<'END'
#!/bin/sh
set -e; set -u;
while test $# -gt 0; do
  case $1 in
    --log-file) log_file=$2; shift;;
    --test-name) test_name=$2; shift;;
    --expect-failure|--color-tests|--enable-hard-errors) shift;;
    --) shift; break;;
     *) echo "$0: invalid option/argument: '$1'" >&2; exit 2;;
  esac
  shift
done
echo "$test_name: RUN"
cp $1 $log_file
END
chmod a+x passthrough-driver

cat > foo.test <<END
:end-metadata:
:test-result: FAIL
:copy-in-global-log: no
:recheck: no
foo foo foo
END

cat > bar.test <<END
:test-result: PASS
:recheck: no
bar bar bar
:copy-in-global-log: no
:end-metadata:  $tab
:test-result: ERROR
:end-metadata:
END

# `:end-metadata:' directives in other files shouldn't influence this one.
cat > baz.test <<END
:test-result: PASS
:recheck: no
:copy-in-global-log: no
baz baz baz
END

$ACLOCAL
$AUTOCONF
$AUTOMAKE

./configure

st=0
$MAKE check >stdout || st=1
# For debugging.
cat stdout
cat foo.log
cat bar.log
cat test-suite.log

# Check that only the `:test-result:' in baz.test and the first one in
# foo.test have been considered.
test $st -eq 0
grep '^# TOTAL: *2$' stdout
grep '^# PASS: *2$' stdout
for result in SKIP XPASS FAIL XFAIL ERROR; do
  grep "^# $result: *0$" stdout
done

# Check that a `:end-metadata:' directive does not prevent following text
# to be copied into the log file.
$FGREP 'foo foo foo' foo.log
$FGREP 'bar bar bar' bar.log
$FGREP 'baz baz baz' baz.log # More of a sanity check really.

# Check that only the `:copy-in-global-log:' in bar.test has been
# considered.
$FGREP 'foo foo foo' test-suite.log
$FGREP 'bar bar bar' test-suite.log && Exit 1
$FGREP 'baz baz baz' test-suite.log && Exit 1

# Check that only the `:recheck:' in bar.test has been
# considered.
$MAKE recheck >stdout || { cat stdout; Exit 1; }
cat stdout
grep '^foo\.test: RUN$' stdout
grep 'ba[rz]\.test.*RUN' stdout && Exit 1

:
