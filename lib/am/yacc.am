## automake - create Makefile.in from Makefile.am
## Copyright (C) 1998-2012 Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

## We want to disable the Yacc rebuild rule when
##   1. AM_MAINTAINER_MODE is used, and
##   2. --enable-maintainer-mode is not specified, and
##   3. parser.c already exist, and
##   4. parser.y and parser.c are distributed.
## Point #3 is because "make maintainer-clean" erases parser.c, yet
## the GNU Coding Standards require that ./configure; make works even
## after that.
## Point #4 is because parsers listed in nodist_*_SOURCES are always
## built on the user's side, so it makes no sense to disable them.
##
## Points #1, #2, #3 are solved by unconditionally prefixing the rule
## with $(am__skipyacc) defined below only when needed.
##
## Point #4 requires a condition on whether parser.y/parser.c are
## distributed or not.  We cannot have a generic rule that works in
## both cases, so we ensure in automake that nodist_ parsers always
## use non-generic rules.
if %?FIRST%
if %?MAINTAINER-MODE%
@MAINTAINER_MODE_FALSE@am__skipyacc = test -f $@ ||
endif %?MAINTAINER-MODE%
am__yacc_c2h = $(basename $1)$(subst c,h,$(suffix $1))
endif %?FIRST%

?GENERIC?%%DERIVED-EXT%: %%EXT%
?!GENERIC?%OBJ%: %SOURCE%
	%SILENT%test -d $(dir $@) || $(MKDIR_P) $(dir $@)
	%VERBOSE% \
?GENERIC?	$(am__skipyacc) \
?!GENERIC??DIST_SOURCE?	$(am__skipyacc) \
	$(SHELL) $(YLWRAP) $< \
	  y.tab.c $@ \
	  y.tab.h $(call am__yacc_c2h,$@) \
	  y.output $(basename $@).output \
	  -- %COMPILE%
