## automake - create Makefile.in from Makefile.am
## Copyright (C) 1999-2012 Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

?FIRST?am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)

## ------------ ##
## Installing.  ##
## ------------ ##

if %?INSTALL%
am__installdirs += "$(DESTDIR)$(%NDIR%dir)"
?EXEC?.PHONY install-exec-am: install-%DIR%PYTHON
?!EXEC?.PHONY install-data-am: install-%DIR%PYTHON
install-%DIR%PYTHON: $(%DIR%_PYTHON)
	@$(NORMAL_INSTALL)
	@$(if $(and $(%NDIR%dir),$(%DIR%_PYTHON)),$(strip \
	   )$(MKDIR_P) "$(DESTDIR)$(%NDIR%dir)")
if %?BASE%
	@test -n "$(%NDIR%dir)" && test -n "$(%DIR%_PYTHON)" || exit 0; \
	dlist='$(notdir $(%DIR%_PYTHON))'; \
	list2='$(foreach i,$(%DIR%_PYTHON),$(call am.vpath.rewrite,$i))'; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
## Don't perform translation, since script name is important.
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(%NDIR%dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(%NDIR%dir)" || exit $$?; \
	done || exit $$?; \
## Byte-compile must be done at install time, since file times are
## encoded in the actual files.
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(%NDIR%dir)" $$dlist; \
	else :; fi
else !%?BASE%
	@list='$(%DIR%_PYTHON)'; test -n "$(%NDIR%dir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for p in $$files; do \
## A file can be in the source directory or the build directory.
	    if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	    if test -f "$$b$$p"; then xfiles="$$xfiles $$b$$p"; dlist="$$dlist $$p"; \
	    else :; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(%NDIR%dir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(%NDIR%dir)/$$dir"; }; \
## Don't perform translation, since script name is important.
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(%NDIR%dir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(%NDIR%dir)/$$dir" || exit $$?; }; \
## Byte-compile must be done at install time, since file times are
## encoded in the actual files.
	  if test -n "$$dlist"; then \
	    $(am__py_compile) --destdir "$(DESTDIR)" \
	                      --basedir "$(%NDIR%dir)" $$dlist; \
	  else :; fi \
	done
endif !%?BASE%
endif %?INSTALL%


## -------------- ##
## Uninstalling.  ##
## -------------- ##

if %?INSTALL%
.PHONY uninstall-am: uninstall-%DIR%PYTHON
uninstall-%DIR%PYTHON:
	@$(NORMAL_UNINSTALL)
	$(call am.uninst.cmd,$(%NDIR%dir), \
	  $(strip $(foreach i, $(patsubst %.py,%, \
?BASE?	    $(notdir $(%DIR%_PYTHON))), \
?!BASE?	    $(patsubst $(srcdir)/%,%,$(%DIR%_PYTHON))), \
	      $i.py \
## Also remove the '.pyc' and '.pyo' byte-compiled versions, catering
## to PEP-3147.   Note that installation of '.py' files is *not*
## influenced by that PEP.
	      $(foreach e, pyc pyo, \
	        $i.$e $(dir $i)__pycache__/$(notdir $i).*.$e))))
endif %?INSTALL%


## ---------- ##
## Cleaning.  ##
## ---------- ##

## There is nothing to clean here since files are
## byte-compiled when (and where) they are installed.

## -------------- ##
## Distributing.  ##
## -------------- ##

if %?DIST%
am.dist.common-files += %DISTVAR%
endif %?DIST%
