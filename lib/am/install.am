## automake - create Makefile.in from Makefile.am
## Copyright (C) 2001-2012 Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

## ----------------------------------------- ##
## installdirs -- Creating the installdirs.  ##
## ----------------------------------------- ##

.PHONY: installdirs installdirs-local
ifdef SUBDIRS
.PHONY: installdirs-am
RECURSIVE_TARGETS += installdirs-recursive
installdirs: installdirs-recursive
endif

$(if $(SUBDIRS),installdirs-am,installdirs): installdirs-local
ifdef am__installdirs
## The reason we loop over $(am__installdirs), instead of simply running
## "$(MKDIR_P) $(am__installdirs), is that directories variable such as
## "$(DESTDIR)$(mydir)" can potentially expand to "" if $(mydir) is
## conditionally defined.  BTW, those directories are quoted in order
## to support installation paths with spaces.
	for dir in $(am__installdirs); do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
endif

## ----------------- ##
## Install targets.  ##
## ----------------- ##

.PHONY: install install-exec install-data uninstall
.PHONY: install-exec-am install-data-am uninstall-am

ifdef SUBDIRS
RECURSIVE_TARGETS += install-data-recursive install-exec-recursive
RECURSIVE_TARGETS += install-recursive uninstall-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive
else
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am
endif

ifdef BUILT_SOURCES
install: $(BUILT_SOURCES)
	$(MAKE) $(if $(SUBDIRS),install-recursive,install-am)
else
install: $(if $(SUBDIRS),install-recursive,install-am)
endif

.PHONY: install-am
install-am: all-am
	@$(MAKE) install-exec-am install-data-am


.PHONY: installcheck
ifdef SUBDIRS
installcheck: installcheck-recursive
else
installcheck: installcheck-am
.PHONY: installcheck-am
installcheck-am:
endif

## If you ever modify this, keep in mind that INSTALL_PROGRAM is used
## in subdirectories, so never set it to a value relative to the top
## directory.
.PHONY: install-strip
## Beware that there are two variables used to install programs:
##   INSTALL_PROGRAM is used for ordinary *_PROGRAMS
##   install_sh_PROGRAM is used for nobase_*_PROGRAMS (because install-sh
##                                                     creates directories)
## It's OK to override both with INSTALL_STRIP_PROGRAM, because
## INSTALL_STRIP_PROGRAM uses install-sh (see m4/strip.m4 for a rationale).
##
## Use double quotes for the *_PROGRAM settings because we might need to
## interpolate some backquotes at runtime.
##
## The case for empty $(STRIP) is separate so that it is quoted correctly for
## multiple words, but does not expand to an empty words if STRIP is empty.
install-strip:
	$(MAKE) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	        install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
		INSTALL_STRIP_FLAG=-s \
		$(if $(STRIP),"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'") \
		install
